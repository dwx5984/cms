package ${package.Entity};

import static lombok.AccessLevel.PRIVATE;

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.FieldDefaults;

/**
 * ${table.comment}
 *
 * @author ${author}
 * @since ${date}
 */
@Data
@FieldDefaults(level = PRIVATE)
@EqualsAndHashCode(callSuper = false)
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end implements Entity{
#elseif(${activeRecord})
public class ${entity} {
#else
public class ${entity} implements Entity{
#end

#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
#if(${field.keyFlag})
#if(${field.keyIdentityFlag})
    @TableId(value="${field.name}", type= IdType.AUTO)
#elseif(${field.convert})
    @TableId("${field.name}")
#end
#elseif(${field.convert})
    @TableField("${field.name}")
#end
    ${field.propertyType} ${field.propertyName};

#end
#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";

#end
#end
}
